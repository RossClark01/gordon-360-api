// <auto-generated />
using System;
using Gordon360.Models.Gordon360.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gordon360.Migrations
{
    [DbContext(typeof(Gordon360Context))]
    [Migration("20240222232922_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("Information_Change_Request_Seq");

            modelBuilder.Entity("Gordon360.Models.Gordon360.ACCOUNT", b =>
                {
                    b.Property<string>("AD_Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Birth_Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("Chapel_Attended")
                        .HasColumnType("int");

                    b.Property<int?>("Chapel_Required")
                        .HasColumnType("int");

                    b.Property<string>("Mail_Location")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Preferred_Photo")
                        .HasColumnType("int");

                    b.Property<int>("Primary_Photo")
                        .HasColumnType("int");

                    b.Property<int>("Private")
                        .HasColumnType("int");

                    b.Property<int>("ReadOnly")
                        .HasColumnType("int");

                    b.Property<int>("account_id")
                        .HasColumnType("int");

                    b.Property<string>("account_type")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("barcode")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)");

                    b.Property<string>("email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("firstname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("gordon_id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("is_police")
                        .HasColumnType("int");

                    b.Property<string>("lastname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("office_hours")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)");

                    b.Property<int>("show_pic")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("ACCOUNT", (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.ACTIVE_CLUBS_PER_SESS_IDResult", b =>
                {
                    b.Property<string>("ACT_CDE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACT_DESC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACT_TYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACT_TYPE_DESC")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.ACT_INFO", b =>
                {
                    b.Property<string>("ACT_CDE")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength();

                    b.Property<string>("ACT_BLURB")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ACT_DESC")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("char(45)")
                        .IsFixedLength();

                    b.Property<string>("ACT_IMG_PATH")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ACT_JOIN_INFO")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ACT_TYPE")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .IsFixedLength();

                    b.Property<string>("ACT_TYPE_DESC")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("char(60)")
                        .IsFixedLength();

                    b.Property<string>("ACT_URL")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<bool?>("PRIVACY")
                        .HasColumnType("bit");

                    b.HasKey("ACT_CDE")
                        .HasName("PK_Activity_Info");

                    b.ToTable("ACT_INFO");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.ADVISOR_SEPARATEResult", b =>
                {
                    b.Property<string>("Advisor1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Advisor2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Advisor3")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.ALL_BASIC_INFOResult", b =>
                {
                    b.Property<string>("ConcatonatedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaidenName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.ALL_BASIC_INFO_NOT_ALUMNIResult", b =>
                {
                    b.Property<string>("ConcatonatedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaidenName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.AccountPhotoURL", b =>
                {
                    b.Property<string>("Gordonid")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PhotoURL")
                        .HasMaxLength(86)
                        .IsUnicode(false)
                        .HasColumnType("varchar(86)");

                    b.Property<string>("PrefPhotoURL")
                        .HasMaxLength(86)
                        .IsUnicode(false)
                        .HasColumnType("varchar(86)");

                    b.ToTable((string)null);

                    b.ToView("AccountPhotoURL", (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Activity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Logo")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<int?>("MaxCapacity")
                        .HasColumnType("int");

                    b.Property<int>("MinCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<DateTime>("RegistrationEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("RegistrationStart")
                        .HasColumnType("datetime");

                    b.Property<int?>("SeriesScheduleID")
                        .HasColumnType("int");

                    b.Property<bool>("SoloRegistration")
                        .HasColumnType("bit");

                    b.Property<int>("SportID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.Property<int>("TypeID")
                        .HasColumnType("int");

                    b.HasKey("ID")
                        .HasName("PK__Activity__3214EC2752162A10");

                    b.HasIndex("SeriesScheduleID");

                    b.HasIndex("SportID");

                    b.HasIndex("StatusID");

                    b.HasIndex("TypeID");

                    b.ToTable("Activity", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.ActivityStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.HasKey("ID");

                    b.ToTable("ActivityStatus", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.ActivityType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.HasKey("ID");

                    b.ToTable("ActivityType", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Affiliation", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Logo")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.HasKey("Name")
                        .HasName("PK_Affiliations");

                    b.ToTable("Affiliation", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.AffiliationPoints", b =>
                {
                    b.Property<string>("AffiliationName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TeamID")
                        .HasColumnType("int");

                    b.Property<int>("SeriesID")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.HasKey("AffiliationName", "TeamID", "SeriesID");

                    b.HasIndex("SeriesID");

                    b.HasIndex("TeamID");

                    b.ToTable("AffiliationPoints", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Alumni", b =>
                {
                    b.Property<string>("AD_Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Barcode")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("ClassYear")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("College")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(63)
                        .IsUnicode(false)
                        .HasColumnType("varchar(63)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("GradDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("HomeCity")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("HomeCountry")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("HomeEmail")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("HomeFax")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("HomePhone")
                        .HasMaxLength(41)
                        .IsUnicode(false)
                        .HasColumnType("varchar(41)");

                    b.Property<string>("HomePostalCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("HomeState")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("HomeStreet1")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("HomeStreet2")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("ID")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.Property<string>("JobTitle")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MaidenName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Major1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Major1Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Major2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Major2Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MaritalStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NickName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PreferredClassYear")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("ShareAddress")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("ShareName")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("SpouseName")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Suffix")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("WebUpdate")
                        .HasColumnType("int");

                    b.Property<string>("grad_student")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<int?>("preferred_photo")
                        .HasColumnType("int");

                    b.Property<int?>("show_pic")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("Alumni", (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.CM_SESSION_MSTR", b =>
                {
                    b.Property<DateTime?>("SESS_BEGN_DTE")
                        .HasColumnType("datetime");

                    b.Property<string>("SESS_CDE")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength();

                    b.Property<string>("SESS_DESC")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime?>("SESS_END_DTE")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("WHEEL_BEGN_DTE")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("WHEEL_END_DTE")
                        .HasColumnType("datetime");

                    b.Property<string>("YRTRM_CDE_2")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("YRTRM_CDE_4")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)");

                    b.ToTable((string)null);

                    b.ToView("CM_SESSION_MSTR", (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.CUSTOM_PROFILE", b =>
                {
                    b.Property<string>("username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PlannedGradYear")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("calendar")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("facebook")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("handshake")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("instagram")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("linkedin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("twitter")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("username");

                    b.ToTable("CUSTOM_PROFILE");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.ChapelEvent", b =>
                {
                    b.Property<int?>("Attended")
                        .HasColumnType("int");

                    b.Property<string>("CHBarEventID")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CHBarcode")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("CHCheckerID")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<DateTime?>("CHDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CHEventID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CHSource")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("CHTermCD")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("CHTime")
                        .HasColumnType("datetime");

                    b.Property<int>("ID_NUM")
                        .HasColumnType("int");

                    b.Property<int?>("LiveID")
                        .HasColumnType("int");

                    b.Property<int>("ROWID")
                        .HasColumnType("int");

                    b.Property<int?>("Required")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("ChapelEvent", (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Clifton_Strengths", b =>
                {
                    b.Property<int>("ID_NUM")
                        .HasColumnType("int");

                    b.Property<string>("ACCESS_CODE")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<DateTime?>("DTE_COMPLETED")
                        .HasColumnType("datetime");

                    b.Property<string>("EMAIL")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("Private")
                        .HasColumnType("bit")
                        .HasComment("Whether the user wants their strengths to be private (not shown to other users)");

                    b.Property<string>("THEME_1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("THEME_2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("THEME_3")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("THEME_4")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("THEME_5")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("ID_NUM", "ACCESS_CODE")
                        .HasName("PK_CliftonStrengths");

                    b.ToTable("Clifton_Strengths");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Config", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Config");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Countries", b =>
                {
                    b.Property<string>("COUNTRY")
                        .IsRequired()
                        .HasMaxLength(63)
                        .IsUnicode(false)
                        .HasColumnType("varchar(63)");

                    b.Property<string>("CTY")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength();

                    b.ToTable((string)null);

                    b.ToView("Countries", (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.CustomParticipant", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Username")
                        .HasName("PK__CustomPa__536C85E5A0FDE2AE");

                    b.ToTable("CustomParticipant", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.DISTINCT_ACT_TYPEResult", b =>
                {
                    b.Property<string>("ACT_TYPE_DESC")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.DiningInfo", b =>
                {
                    b.Property<string>("ChoiceDescription")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("char(60)")
                        .IsFixedLength();

                    b.Property<int?>("InitialBalance")
                        .HasColumnType("int");

                    b.Property<string>("PlanDescriptions")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("PlanId")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("PlanType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SessionCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength();

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("DiningInfo", (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.ERROR_LOG", b =>
                {
                    b.Property<int>("LOG_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LOG_ID"));

                    b.Property<string>("LOG_MESSAGE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LOG_TIME")
                        .HasColumnType("datetime");

                    b.HasKey("LOG_ID");

                    b.ToTable("ERROR_LOG");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.EmergencyContact", b =>
                {
                    b.Property<string>("AD_Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("APPID")
                        .HasColumnType("int");

                    b.Property<string>("AddressAddrCode")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength();

                    b.Property<byte[]>("ApprowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("EMRG_PRIORITY")
                        .HasColumnType("int");

                    b.Property<string>("EMRG_STATE")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("EmailAddrCode")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength();

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("HomeAddrCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("HomeExt")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength();

                    b.Property<string>("HomePhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .IsFixedLength();

                    b.Property<int>("ID_NUM")
                        .HasColumnType("int");

                    b.Property<int?>("ID_NUM_EMRG_CNTCT")
                        .HasColumnType("int");

                    b.Property<string>("JobName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("JobTime")
                        .HasColumnType("datetime");

                    b.Property<string>("MobileAddrCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MobileExt")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength();

                    b.Property<string>("MobilePhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .IsFixedLength();

                    b.Property<int>("SEQ_NUM")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(513)
                        .IsUnicode(false)
                        .HasColumnType("varchar(513)");

                    b.Property<string>("WorkAddrCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("WorkExr")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength();

                    b.Property<string>("WorkPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .IsFixedLength();

                    b.Property<string>("addr_1")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("addr_2")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("city")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("country")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("firstname")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("lastname")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("middlename")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("notes")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("prefix")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("relationship")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("suffix")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("zip")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.ToTable((string)null);

                    b.ToView("EmergencyContact", (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.FINALIZATION_GETHOLDSBYIDResult", b =>
                {
                    b.Property<bool?>("FinancialHold")
                        .HasColumnType("bit");

                    b.Property<string>("FinancialHoldText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HighSchoolHold")
                        .HasColumnType("bit");

                    b.Property<bool?>("LaVidaHold")
                        .HasColumnType("bit");

                    b.Property<bool?>("MajorHold")
                        .HasColumnType("bit");

                    b.Property<bool?>("MedicalHold")
                        .HasColumnType("bit");

                    b.Property<string>("MeetingDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingLocations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("MustRegisterForClasses")
                        .HasColumnType("bit");

                    b.Property<int>("NewStudent")
                        .HasColumnType("int");

                    b.Property<bool?>("RegistrarHold")
                        .HasColumnType("bit");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.FINALIZATION_GET_FINALIZATION_STATUSResult", b =>
                {
                    b.Property<string>("BypassApprover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateFinalized")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateInserted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FinalizationCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("IgnoreHoldsApprover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Period")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RootQuery")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.FINALIZATION_MARK_AS_CURRENTLY_COMPLETEDResult", b =>
                {
                    b.Property<string>("BypassApprover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateFinalized")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateInserted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FinalizationCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("HeadcountsAsOfDateFinalized")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IgnoreHoldsApprover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Period")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RootQuery")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.FINALIZATION_UPDATECELLPHONEResult", b =>
                {
                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Success")
                        .HasColumnType("bit");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.FINALIZATION_UPDATEDEMOGRAPHICResult", b =>
                {
                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.FacStaff", b =>
                {
                    b.Property<string>("AD_Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("ActiveAccount")
                        .HasColumnType("bit");

                    b.Property<string>("Barcode")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)");

                    b.Property<string>("BuildingDescription")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("char(45)")
                        .IsFixedLength();

                    b.Property<string>("Country")
                        .HasMaxLength(63)
                        .IsUnicode(false)
                        .HasColumnType("varchar(63)");

                    b.Property<string>("Dept")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("HomeCity")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("HomeCountry")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("HomeFax")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("HomePhone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("HomePostalCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("HomeState")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("HomeStreet1")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("HomeStreet2")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("ID")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.Property<string>("JobTitle")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("KeepPrivate")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("LastName")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("MaidenName")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Mail_Description")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Mail_Location")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("MobilePhone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Nickname")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("OnCampusBuilding")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("OnCampusDepartment")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OnCampusFax")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("OnCampusPhone")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("OnCampusPrivatePhone")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("OnCampusRoom")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SpouseName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Suffix")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Title")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Type")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("office_hours")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)");

                    b.Property<int?>("preferred_photo")
                        .HasColumnType("int");

                    b.Property<int?>("show_pic")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("FacStaff", (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Housing_Applicants", b =>
                {
                    b.Property<int>("HousingAppID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AprtProgram")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("AprtProgramCredit")
                        .HasColumnType("bit");

                    b.Property<string>("SESS_CDE")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength();

                    b.HasKey("HousingAppID", "Username");

                    b.ToTable("Housing_Applicants");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Housing_Applications", b =>
                {
                    b.Property<int>("HousingAppID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HousingAppID"));

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateSubmitted")
                        .HasColumnType("datetime");

                    b.Property<string>("EditorUsername")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("HousingAppID");

                    b.ToTable("Housing_Applications");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Housing_HallChoices", b =>
                {
                    b.Property<int>("HallChoiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HallChoiceID"));

                    b.Property<string>("HallName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int>("HousingAppID")
                        .HasColumnType("int");

                    b.Property<int>("Ranking")
                        .HasColumnType("int");

                    b.HasKey("HallChoiceID");

                    b.HasIndex(new[] { "HousingAppID" }, "IX_Housing_HallChoices");

                    b.ToTable("Housing_HallChoices");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Housing_Halls", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Name");

                    b.ToTable("Housing_Halls");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Information_Change_Request", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FieldValue")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ID_Num")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)");

                    b.Property<long>("RequestNumber")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("TimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ID");

                    b.ToTable("Information_Change_Request");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.InvolvementOffering", b =>
                {
                    b.Property<string>("ActivityCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength();

                    b.Property<string>("ActivityDescription")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("char(45)")
                        .IsFixedLength();

                    b.Property<string>("ActivityType")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .IsFixedLength();

                    b.Property<string>("ActivityTypeDescription")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("char(60)")
                        .IsFixedLength();

                    b.Property<string>("SessionCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength();

                    b.ToTable((string)null);

                    b.ToView("InvolvementOffering", (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.MEMBERSHIP", b =>
                {
                    b.Property<int>("MEMBERSHIP_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MEMBERSHIP_ID"));

                    b.Property<string>("ACT_CDE")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength();

                    b.Property<DateTime>("BEGIN_DTE")
                        .HasColumnType("datetime");

                    b.Property<string>("COMMENT_TXT")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime?>("END_DTE")
                        .HasColumnType("datetime");

                    b.Property<bool?>("GRP_ADMIN")
                        .HasColumnType("bit");

                    b.Property<int>("ID_NUM")
                        .HasColumnType("int");

                    b.Property<string>("JOB_NAME")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("char(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("JOB_TIME")
                        .HasColumnType("datetime");

                    b.Property<string>("PART_CDE")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength();

                    b.Property<bool?>("PRIVACY")
                        .HasColumnType("bit");

                    b.Property<string>("SESS_CDE")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength();

                    b.Property<string>("USER_NAME")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("MEMBERSHIP_ID")
                        .HasName("PK_Membership");

                    b.HasIndex(new[] { "ACT_CDE", "SESS_CDE", "ID_NUM" }, "IX_MEMBERSHIP")
                        .IsUnique();

                    b.ToTable("MEMBERSHIP");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Mailboxes", b =>
                {
                    b.Property<int>("BoxId")
                        .HasColumnType("int");

                    b.Property<string>("BoxNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Combination")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)");

                    b.Property<int?>("HolderAccountId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)");

                    b.ToTable((string)null);

                    b.ToView("Mailboxes", (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Majors", b =>
                {
                    b.Property<string>("MajorCode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("MajorDescription")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("Majors", (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Match", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("SeriesID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.Property<int>("SurfaceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ID")
                        .HasName("PK__Match__3214EC27BB2F05C8");

                    b.HasIndex("SeriesID");

                    b.HasIndex("StatusID");

                    b.HasIndex("SurfaceID");

                    b.ToTable("Match", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.MatchBracket", b =>
                {
                    b.Property<int>("MatchID")
                        .HasColumnType("int");

                    b.Property<bool>("IsLosers")
                        .HasColumnType("bit");

                    b.Property<int>("RoundNumber")
                        .HasColumnType("int");

                    b.Property<int>("RoundOf")
                        .HasColumnType("int");

                    b.Property<int>("SeedIndex")
                        .HasColumnType("int");

                    b.HasKey("MatchID");

                    b.ToTable("MatchBracket", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.MatchParticipant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("MatchID")
                        .HasColumnType("int");

                    b.Property<string>("ParticipantUsername")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TeamID")
                        .HasColumnType("int");

                    b.HasKey("ID")
                        .HasName("PK__MatchPar__3214EC27DFD38F69");

                    b.HasIndex("MatchID");

                    b.HasIndex("ParticipantUsername");

                    b.HasIndex("TeamID");

                    b.ToTable("MatchParticipant", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.MatchStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.HasKey("ID");

                    b.ToTable("MatchStatus", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.MatchTeam", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("MatchID")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("SportsmanshipScore")
                        .HasColumnType("int");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.Property<int>("TeamID")
                        .HasColumnType("int");

                    b.HasKey("ID")
                        .HasName("PK__MatchTea__3214EC2743BD85C3");

                    b.HasIndex("MatchID");

                    b.HasIndex("StatusID");

                    b.HasIndex("TeamID");

                    b.ToTable("MatchTeam", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.MatchTeamStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.HasKey("ID");

                    b.ToTable("MatchTeamStatus", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.MembershipView", b =>
                {
                    b.Property<string>("ActivityCode")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("ActivityDescription")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("char(45)")
                        .IsFixedLength();

                    b.Property<string>("ActivityImagePath")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("GroupAdmin")
                        .HasColumnType("bit");

                    b.Property<int>("IsAlumni")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("MembershipID")
                        .HasColumnType("int");

                    b.Property<string>("Participation")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("ParticipationDescription")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)");

                    b.Property<bool?>("Privacy")
                        .HasColumnType("bit");

                    b.Property<string>("SessionCode")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("SessionDescription")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("MembershipView", (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Minors", b =>
                {
                    b.Property<string>("MinorCode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("MinorDescription")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("Minors", (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.PART_DEF", b =>
                {
                    b.Property<string>("PART_CDE")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength();

                    b.Property<string>("PART_DESC")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("char(45)")
                        .IsFixedLength();

                    b.ToTable((string)null);

                    b.ToView("PART_DEF", (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.PHOTO_INFO_PER_USER_NAMEResult", b =>
                {
                    b.Property<string>("Img_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img_Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pref_Img_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pref_Img_Path")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Participant", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("AllowEmails")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCustom")
                        .HasColumnType("bit");

                    b.Property<string>("SpecifiedGender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.HasKey("Username");

                    b.ToTable("Participant", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.ParticipantActivity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ActivityID")
                        .HasColumnType("int");

                    b.Property<bool>("IsFreeAgent")
                        .HasColumnType("bit");

                    b.Property<string>("ParticipantUsername")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("PrivTypeID")
                        .HasColumnType("int");

                    b.HasKey("ID")
                        .HasName("PK__Particip__3214EC27C3ECBD4A");

                    b.HasIndex("ActivityID");

                    b.HasIndex("ParticipantUsername");

                    b.HasIndex("PrivTypeID");

                    b.ToTable("ParticipantActivity", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.ParticipantNotification", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DispatchDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("ParticipantUsername")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID")
                        .HasName("PK__Particip__3214EC2702C79C04");

                    b.HasIndex("ParticipantUsername");

                    b.ToTable("ParticipantNotification", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.ParticipantStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.HasKey("ID");

                    b.ToTable("ParticipantStatus", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.ParticipantStatusHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("ParticipantUsername")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.HasKey("ID")
                        .HasName("PK__Particip__3214EC2705A45A77");

                    b.HasIndex("ParticipantUsername");

                    b.HasIndex("StatusID");

                    b.ToTable("ParticipantStatusHistory", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.ParticipantTeam", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ParticipantUsername")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("RoleTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("SignDate")
                        .HasColumnType("datetime");

                    b.Property<int>("TeamID")
                        .HasColumnType("int");

                    b.HasKey("ID")
                        .HasName("PK__Particip__3214EC27CA13A740");

                    b.HasIndex("ParticipantUsername");

                    b.HasIndex("RoleTypeID");

                    b.HasIndex("TeamID");

                    b.ToTable("ParticipantTeam", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.ParticipantView", b =>
                {
                    b.Property<bool>("AllowEmails")
                        .HasColumnType("bit");

                    b.Property<int>("CurrentStatus")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCustom")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SpecifiedGender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("ParticipantView", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.PrivType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.HasKey("ID");

                    b.ToTable("PrivType", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.REQUEST", b =>
                {
                    b.Property<int>("REQUEST_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("REQUEST_ID"));

                    b.Property<string>("ACT_CDE")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength();

                    b.Property<string>("COMMENT_TXT")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime>("DATE_SENT")
                        .HasColumnType("datetime");

                    b.Property<int>("ID_NUM")
                        .HasColumnType("int");

                    b.Property<string>("PART_CDE")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength();

                    b.Property<string>("SESS_CDE")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength();

                    b.Property<string>("STATUS")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("REQUEST_ID")
                        .HasName("PK_Request");

                    b.ToTable("REQUEST");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.RequestView", b =>
                {
                    b.Property<string>("ActivityCode")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("ActivityDescription")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("char(45)")
                        .IsFixedLength();

                    b.Property<string>("ActivityImagePath")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("DateSent")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Participation")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("ParticipationDescription")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("char(45)")
                        .IsFixedLength();

                    b.Property<int>("RequestID")
                        .HasColumnType("int");

                    b.Property<string>("SessionCode")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("SessionDescription")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("RequestView", (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.RoleType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.HasKey("ID");

                    b.ToTable("RoleType", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.STUDENT_JOBS_PER_ID_NUMResult", b =>
                {
                    b.Property<string>("Job_Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Job_Department_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Job_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Job_Expected_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Job_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Job_Title")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Series", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ActivityID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.Property<int>("TypeID")
                        .HasColumnType("int");

                    b.Property<int?>("WinnerID")
                        .HasColumnType("int");

                    b.HasKey("ID")
                        .HasName("PK__Series__3214EC27544E6A66");

                    b.HasIndex("ActivityID");

                    b.HasIndex("ScheduleID");

                    b.HasIndex("StatusID");

                    b.HasIndex("TypeID");

                    b.HasIndex("WinnerID");

                    b.ToTable("Series", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.SeriesSchedule", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("EstMatchTime")
                        .HasColumnType("int");

                    b.Property<bool>("Fri")
                        .HasColumnType("bit");

                    b.Property<bool>("Mon")
                        .HasColumnType("bit");

                    b.Property<bool>("Sat")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("Sun")
                        .HasColumnType("bit");

                    b.Property<bool>("Thu")
                        .HasColumnType("bit");

                    b.Property<bool>("Tue")
                        .HasColumnType("bit");

                    b.Property<bool>("Wed")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("SeriesSchedule", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.SeriesStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.HasKey("ID");

                    b.ToTable("SeriesStatus", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.SeriesSurface", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("SeriesID")
                        .HasColumnType("int");

                    b.Property<int>("SurfaceID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SeriesID");

                    b.HasIndex("SurfaceID");

                    b.ToTable("SeriesSurface", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.SeriesTeam", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("LossCount")
                        .HasColumnType("int");

                    b.Property<int>("SeriesID")
                        .HasColumnType("int");

                    b.Property<int>("TeamID")
                        .HasColumnType("int");

                    b.Property<int>("TieCount")
                        .HasColumnType("int");

                    b.Property<int>("WinCount")
                        .HasColumnType("int");

                    b.HasKey("ID")
                        .HasName("PK__SeriesTe__3214EC27F3AD6274");

                    b.HasIndex("SeriesID");

                    b.HasIndex("TeamID");

                    b.ToTable("SeriesTeam", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.SeriesTeamView", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<int>("LossCount")
                        .HasColumnType("int");

                    b.Property<int>("SeriesID")
                        .HasColumnType("int");

                    b.Property<decimal?>("SportsmanshipRating")
                        .HasColumnType("decimal(38, 6)");

                    b.Property<int>("TeamID")
                        .HasColumnType("int");

                    b.Property<int>("TieCount")
                        .HasColumnType("int");

                    b.Property<int>("WinCount")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("SeriesTeamView", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.SeriesType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("TypeCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.HasKey("ID")
                        .HasName("PK__SeriesTy__3214EC270DA32B2F");

                    b.ToTable("SeriesType", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Slider_Images", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("LinkURL")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Slider_Images");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Sport", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Logo")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Rules")
                        .IsRequired()
                        .HasMaxLength(512)
                        .IsUnicode(false)
                        .HasColumnType("varchar(512)");

                    b.HasKey("ID")
                        .HasName("PK__Sport__3214EC276FB2D545");

                    b.ToTable("Sport", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.States", b =>
                {
                    b.Property<string>("Abbreviation")
                        .HasMaxLength(31)
                        .IsUnicode(false)
                        .HasColumnType("varchar(31)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(63)
                        .IsUnicode(false)
                        .HasColumnType("varchar(63)");

                    b.ToTable((string)null);

                    b.ToView("States", (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Statistic", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Loss")
                        .HasColumnType("int");

                    b.Property<int>("ParticipantTeamID")
                        .HasColumnType("int");

                    b.Property<double>("Sportsmanship")
                        .HasColumnType("float");

                    b.Property<int>("TimesRated")
                        .HasColumnType("int");

                    b.Property<int>("Win")
                        .HasColumnType("int");

                    b.HasKey("ID")
                        .HasName("PK__Statisti__3214EC2707DA8F6B");

                    b.HasIndex("ParticipantTeamID");

                    b.ToTable("Statistic", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Student", b =>
                {
                    b.Property<string>("AD_Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AdvisorIDs")
                        .HasMaxLength(92)
                        .IsUnicode(false)
                        .HasColumnType("varchar(92)");

                    b.Property<string>("Barcode")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)");

                    b.Property<string>("BuildingDescription")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("char(45)")
                        .IsFixedLength();

                    b.Property<int?>("ChapelAttended")
                        .HasColumnType("int");

                    b.Property<int?>("ChapelRequired")
                        .HasColumnType("int");

                    b.Property<string>("Class")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Cohort")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Commuter")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Country")
                        .HasMaxLength(63)
                        .IsUnicode(false)
                        .HasColumnType("varchar(63)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("GradDate")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("HomeCity")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("HomeCountry")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("HomeFax")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("HomePhone")
                        .HasMaxLength(41)
                        .IsUnicode(false)
                        .HasColumnType("varchar(41)");

                    b.Property<string>("HomePostalCode")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("HomeState")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("HomeStreet1")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("HomeStreet2")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("ID")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.Property<int>("IsMobilePhonePrivate")
                        .HasColumnType("int");

                    b.Property<string>("KeepPrivate")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MaidenName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Mail_Location")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Major")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Major1Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Major2")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Major2Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Major3")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Major3Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Married")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Minor1")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Minor1Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Minor2")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Minor2Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Minor3")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Minor3Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MobilePhone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("NickName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("OffCampusCity")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("OffCampusCountry")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("OffCampusFax")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("OffCampusPhone")
                        .HasMaxLength(41)
                        .IsUnicode(false)
                        .HasColumnType("varchar(41)");

                    b.Property<string>("OffCampusPostalCode")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("OffCampusState")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("OffCampusStreet1")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("OffCampusStreet2")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("OnCampusBuilding")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("OnCampusFax")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("OnCampusPhone")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("OnCampusPrivatePhone")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("OnCampusRoom")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("OnOffCampus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("PlannedGradYear")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Suffix")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Title")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("grad_student")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<int?>("preferred_photo")
                        .HasColumnType("int");

                    b.Property<int?>("show_pic")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("Student", (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.StudentNewsExpiration", b =>
                {
                    b.Property<int>("SNID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ManualExpirationDate")
                        .HasColumnType("datetime");

                    b.HasKey("SNID")
                        .HasName("PK_StudentNewsExpiration_SNID");

                    b.ToTable("StudentNewsExpiration");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Surface", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.HasKey("ID")
                        .HasName("PK__Surface__3214EC27629CF90A");

                    b.ToTable("Surface", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Team", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ActivityID")
                        .HasColumnType("int");

                    b.Property<string>("Affiliation")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Logo")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.HasKey("ID")
                        .HasName("PK__Team__3214EC27A55EA0D3");

                    b.HasIndex("ActivityID");

                    b.HasIndex("Affiliation");

                    b.HasIndex("StatusID");

                    b.ToTable("Team", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.TeamStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.HasKey("ID");

                    b.ToTable("TeamStatus", "RecIM");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.UPDATE_CELL_PHONEResult", b =>
                {
                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Success")
                        .HasColumnType("bit");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.UserCourses", b =>
                {
                    b.Property<DateTime?>("BEGIN_DATE")
                        .HasColumnType("date");

                    b.Property<TimeSpan?>("BEGIN_TIME")
                        .HasColumnType("time");

                    b.Property<string>("BLDG_CDE")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength();

                    b.Property<string>("CRS_CDE")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("char(30)")
                        .IsFixedLength();

                    b.Property<string>("CRS_TITLE")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("char(35)")
                        .IsFixedLength();

                    b.Property<DateTime?>("END_DATE")
                        .HasColumnType("date");

                    b.Property<TimeSpan?>("END_TIME")
                        .HasColumnType("time");

                    b.Property<string>("FRIDAY_CDE")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<int?>("INSTRUCTOR_ID")
                        .HasColumnType("int");

                    b.Property<string>("MONDAY_CDE")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("ROOM_CDE")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength();

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SATURDAY_CDE")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("SUBTERM_DESC")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("char(30)")
                        .IsFixedLength();

                    b.Property<int?>("SUBTERM_SORT_ORDER")
                        .HasColumnType("int");

                    b.Property<string>("SUNDAY_CDE")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("THURSDAY_CDE")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("TRM_CDE")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength();

                    b.Property<string>("TUESDAY_CDE")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("WEDNESDAY_CDE")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("YR_CDE")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength();

                    b.ToTable((string)null);

                    b.ToView("UserCourses", (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.VICTORY_PROMISE_BY_STUDENT_IDResult", b =>
                {
                    b.Property<int?>("TOTAL_VP_CC_SCORE")
                        .HasColumnType("int");

                    b.Property<int?>("TOTAL_VP_IM_SCORE")
                        .HasColumnType("int");

                    b.Property<int?>("TOTAL_VP_LS_SCORE")
                        .HasColumnType("int");

                    b.Property<int?>("TOTAL_VP_LW_SCORE")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Activity", b =>
                {
                    b.HasOne("Gordon360.Models.Gordon360.SeriesSchedule", "SeriesSchedule")
                        .WithMany("Activity")
                        .HasForeignKey("SeriesScheduleID")
                        .HasConstraintName("FK_Activity_SeriesSchedule");

                    b.HasOne("Gordon360.Models.Gordon360.Sport", "Sport")
                        .WithMany("Activity")
                        .HasForeignKey("SportID")
                        .IsRequired()
                        .HasConstraintName("FK_Activity_Sport");

                    b.HasOne("Gordon360.Models.Gordon360.ActivityStatus", "Status")
                        .WithMany("Activity")
                        .HasForeignKey("StatusID")
                        .IsRequired()
                        .HasConstraintName("FK_Activity_ActivityStatus");

                    b.HasOne("Gordon360.Models.Gordon360.ActivityType", "Type")
                        .WithMany("Activity")
                        .HasForeignKey("TypeID")
                        .IsRequired()
                        .HasConstraintName("FK_Activity_ActivityType");

                    b.Navigation("SeriesSchedule");

                    b.Navigation("Sport");

                    b.Navigation("Status");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.AffiliationPoints", b =>
                {
                    b.HasOne("Gordon360.Models.Gordon360.Affiliation", "AffiliationNameNavigation")
                        .WithMany("AffiliationPoints")
                        .HasForeignKey("AffiliationName")
                        .IsRequired()
                        .HasConstraintName("FK_AffiliationPoints_Affiliations");

                    b.HasOne("Gordon360.Models.Gordon360.Series", "Series")
                        .WithMany("AffiliationPoints")
                        .HasForeignKey("SeriesID")
                        .IsRequired()
                        .HasConstraintName("FK_AffiliationPoints_Series");

                    b.HasOne("Gordon360.Models.Gordon360.Team", "Team")
                        .WithMany("AffiliationPoints")
                        .HasForeignKey("TeamID")
                        .IsRequired()
                        .HasConstraintName("FK_AffiliationPoints_Team");

                    b.Navigation("AffiliationNameNavigation");

                    b.Navigation("Series");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.CustomParticipant", b =>
                {
                    b.HasOne("Gordon360.Models.Gordon360.Participant", "UsernameNavigation")
                        .WithOne("CustomParticipant")
                        .HasForeignKey("Gordon360.Models.Gordon360.CustomParticipant", "Username")
                        .IsRequired()
                        .HasConstraintName("FK__CustomPar__Usern__70D3A237");

                    b.Navigation("UsernameNavigation");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Housing_Applicants", b =>
                {
                    b.HasOne("Gordon360.Models.Gordon360.Housing_Applications", "HousingApp")
                        .WithMany("Housing_Applicants")
                        .HasForeignKey("HousingAppID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Applicants_HousingAppID");

                    b.Navigation("HousingApp");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Match", b =>
                {
                    b.HasOne("Gordon360.Models.Gordon360.Series", "Series")
                        .WithMany("Match")
                        .HasForeignKey("SeriesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Match_Series");

                    b.HasOne("Gordon360.Models.Gordon360.MatchStatus", "Status")
                        .WithMany("Match")
                        .HasForeignKey("StatusID")
                        .IsRequired()
                        .HasConstraintName("FK_Match_MatchStatus");

                    b.HasOne("Gordon360.Models.Gordon360.Surface", "Surface")
                        .WithMany("Match")
                        .HasForeignKey("SurfaceID")
                        .IsRequired()
                        .HasConstraintName("FK_Match_Surface");

                    b.Navigation("Series");

                    b.Navigation("Status");

                    b.Navigation("Surface");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.MatchBracket", b =>
                {
                    b.HasOne("Gordon360.Models.Gordon360.Match", "Match")
                        .WithOne("MatchBracket")
                        .HasForeignKey("Gordon360.Models.Gordon360.MatchBracket", "MatchID")
                        .IsRequired()
                        .HasConstraintName("FK_MatchBracket_Match");

                    b.Navigation("Match");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.MatchParticipant", b =>
                {
                    b.HasOne("Gordon360.Models.Gordon360.Match", "Match")
                        .WithMany("MatchParticipant")
                        .HasForeignKey("MatchID")
                        .IsRequired()
                        .HasConstraintName("FK_MatchParticipant_Match");

                    b.HasOne("Gordon360.Models.Gordon360.Participant", "ParticipantUsernameNavigation")
                        .WithMany("MatchParticipant")
                        .HasForeignKey("ParticipantUsername")
                        .IsRequired()
                        .HasConstraintName("FK_MatchParticipant_Participant");

                    b.HasOne("Gordon360.Models.Gordon360.Team", "Team")
                        .WithMany("MatchParticipant")
                        .HasForeignKey("TeamID")
                        .IsRequired()
                        .HasConstraintName("FK_MatchParticipant_Team");

                    b.Navigation("Match");

                    b.Navigation("ParticipantUsernameNavigation");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.MatchTeam", b =>
                {
                    b.HasOne("Gordon360.Models.Gordon360.Match", "Match")
                        .WithMany("MatchTeam")
                        .HasForeignKey("MatchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_MatchTeam_Match");

                    b.HasOne("Gordon360.Models.Gordon360.MatchTeamStatus", "Status")
                        .WithMany("MatchTeam")
                        .HasForeignKey("StatusID")
                        .IsRequired()
                        .HasConstraintName("FK_MatchTeam_MatchTeamStatus");

                    b.HasOne("Gordon360.Models.Gordon360.Team", "Team")
                        .WithMany("MatchTeam")
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_MatchTeam_Team");

                    b.Navigation("Match");

                    b.Navigation("Status");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.ParticipantActivity", b =>
                {
                    b.HasOne("Gordon360.Models.Gordon360.Activity", "Activity")
                        .WithMany("ParticipantActivity")
                        .HasForeignKey("ActivityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ParticipantActivity_Activity");

                    b.HasOne("Gordon360.Models.Gordon360.Participant", "ParticipantUsernameNavigation")
                        .WithMany("ParticipantActivity")
                        .HasForeignKey("ParticipantUsername")
                        .IsRequired()
                        .HasConstraintName("FK_ParticipantActivity_Participant");

                    b.HasOne("Gordon360.Models.Gordon360.PrivType", "PrivType")
                        .WithMany("ParticipantActivity")
                        .HasForeignKey("PrivTypeID")
                        .IsRequired()
                        .HasConstraintName("FK_PrivType_ParticipantActivity");

                    b.Navigation("Activity");

                    b.Navigation("ParticipantUsernameNavigation");

                    b.Navigation("PrivType");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.ParticipantNotification", b =>
                {
                    b.HasOne("Gordon360.Models.Gordon360.Participant", "ParticipantUsernameNavigation")
                        .WithMany("ParticipantNotification")
                        .HasForeignKey("ParticipantUsername")
                        .IsRequired()
                        .HasConstraintName("FK_ParticipantNotification_Participant");

                    b.Navigation("ParticipantUsernameNavigation");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.ParticipantStatusHistory", b =>
                {
                    b.HasOne("Gordon360.Models.Gordon360.Participant", "ParticipantUsernameNavigation")
                        .WithMany("ParticipantStatusHistory")
                        .HasForeignKey("ParticipantUsername")
                        .IsRequired()
                        .HasConstraintName("FK_ParticipantStatusHistory_Participant");

                    b.HasOne("Gordon360.Models.Gordon360.ParticipantStatus", "Status")
                        .WithMany("ParticipantStatusHistory")
                        .HasForeignKey("StatusID")
                        .IsRequired()
                        .HasConstraintName("FK_ParticipantStatusHistory_ParticipantStatus");

                    b.Navigation("ParticipantUsernameNavigation");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.ParticipantTeam", b =>
                {
                    b.HasOne("Gordon360.Models.Gordon360.Participant", "ParticipantUsernameNavigation")
                        .WithMany("ParticipantTeam")
                        .HasForeignKey("ParticipantUsername")
                        .IsRequired()
                        .HasConstraintName("FK_ParticipantTeam_Participant");

                    b.HasOne("Gordon360.Models.Gordon360.RoleType", "RoleType")
                        .WithMany("ParticipantTeam")
                        .HasForeignKey("RoleTypeID")
                        .IsRequired()
                        .HasConstraintName("FK_RoleType_ParticipantTeam");

                    b.HasOne("Gordon360.Models.Gordon360.Team", "Team")
                        .WithMany("ParticipantTeam")
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ParticipantTeam_Team");

                    b.Navigation("ParticipantUsernameNavigation");

                    b.Navigation("RoleType");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Series", b =>
                {
                    b.HasOne("Gordon360.Models.Gordon360.Activity", "Activity")
                        .WithMany("Series")
                        .HasForeignKey("ActivityID")
                        .IsRequired()
                        .HasConstraintName("FK_Series_Activity");

                    b.HasOne("Gordon360.Models.Gordon360.SeriesSchedule", "Schedule")
                        .WithMany("Series")
                        .HasForeignKey("ScheduleID")
                        .IsRequired()
                        .HasConstraintName("FK_SeriesSchedule_Series");

                    b.HasOne("Gordon360.Models.Gordon360.SeriesStatus", "Status")
                        .WithMany("Series")
                        .HasForeignKey("StatusID")
                        .IsRequired()
                        .HasConstraintName("FK_SeriesStatus_Series");

                    b.HasOne("Gordon360.Models.Gordon360.SeriesType", "Type")
                        .WithMany("Series")
                        .HasForeignKey("TypeID")
                        .IsRequired()
                        .HasConstraintName("FK_Series_SeriesType");

                    b.HasOne("Gordon360.Models.Gordon360.Team", "Winner")
                        .WithMany("Series")
                        .HasForeignKey("WinnerID")
                        .HasConstraintName("FK_Series_Team");

                    b.Navigation("Activity");

                    b.Navigation("Schedule");

                    b.Navigation("Status");

                    b.Navigation("Type");

                    b.Navigation("Winner");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.SeriesSurface", b =>
                {
                    b.HasOne("Gordon360.Models.Gordon360.Series", "Series")
                        .WithMany("SeriesSurface")
                        .HasForeignKey("SeriesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_SeriesSurface_Series");

                    b.HasOne("Gordon360.Models.Gordon360.Surface", "Surface")
                        .WithMany("SeriesSurface")
                        .HasForeignKey("SurfaceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_SeriesSurface_Surface");

                    b.Navigation("Series");

                    b.Navigation("Surface");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.SeriesTeam", b =>
                {
                    b.HasOne("Gordon360.Models.Gordon360.Series", "Series")
                        .WithMany("SeriesTeam")
                        .HasForeignKey("SeriesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_SeriesTeam_Series");

                    b.HasOne("Gordon360.Models.Gordon360.Team", "Team")
                        .WithMany("SeriesTeam")
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_SeriesTeam_Team");

                    b.Navigation("Series");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Statistic", b =>
                {
                    b.HasOne("Gordon360.Models.Gordon360.ParticipantTeam", "ParticipantTeam")
                        .WithMany("Statistic")
                        .HasForeignKey("ParticipantTeamID")
                        .IsRequired()
                        .HasConstraintName("FK_Statistic_ParticipantTeam");

                    b.Navigation("ParticipantTeam");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Team", b =>
                {
                    b.HasOne("Gordon360.Models.Gordon360.Activity", "Activity")
                        .WithMany("Team")
                        .HasForeignKey("ActivityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Team_Activity");

                    b.HasOne("Gordon360.Models.Gordon360.Affiliation", "AffiliationNavigation")
                        .WithMany("Team")
                        .HasForeignKey("Affiliation")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_Team_Affiliations");

                    b.HasOne("Gordon360.Models.Gordon360.TeamStatus", "Status")
                        .WithMany("Team")
                        .HasForeignKey("StatusID")
                        .IsRequired()
                        .HasConstraintName("FK_Team_TeamStatus");

                    b.Navigation("Activity");

                    b.Navigation("AffiliationNavigation");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Activity", b =>
                {
                    b.Navigation("ParticipantActivity");

                    b.Navigation("Series");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.ActivityStatus", b =>
                {
                    b.Navigation("Activity");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.ActivityType", b =>
                {
                    b.Navigation("Activity");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Affiliation", b =>
                {
                    b.Navigation("AffiliationPoints");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Housing_Applications", b =>
                {
                    b.Navigation("Housing_Applicants");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Match", b =>
                {
                    b.Navigation("MatchBracket");

                    b.Navigation("MatchParticipant");

                    b.Navigation("MatchTeam");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.MatchStatus", b =>
                {
                    b.Navigation("Match");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.MatchTeamStatus", b =>
                {
                    b.Navigation("MatchTeam");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Participant", b =>
                {
                    b.Navigation("CustomParticipant");

                    b.Navigation("MatchParticipant");

                    b.Navigation("ParticipantActivity");

                    b.Navigation("ParticipantNotification");

                    b.Navigation("ParticipantStatusHistory");

                    b.Navigation("ParticipantTeam");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.ParticipantStatus", b =>
                {
                    b.Navigation("ParticipantStatusHistory");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.ParticipantTeam", b =>
                {
                    b.Navigation("Statistic");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.PrivType", b =>
                {
                    b.Navigation("ParticipantActivity");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.RoleType", b =>
                {
                    b.Navigation("ParticipantTeam");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Series", b =>
                {
                    b.Navigation("AffiliationPoints");

                    b.Navigation("Match");

                    b.Navigation("SeriesSurface");

                    b.Navigation("SeriesTeam");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.SeriesSchedule", b =>
                {
                    b.Navigation("Activity");

                    b.Navigation("Series");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.SeriesStatus", b =>
                {
                    b.Navigation("Series");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.SeriesType", b =>
                {
                    b.Navigation("Series");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Sport", b =>
                {
                    b.Navigation("Activity");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Surface", b =>
                {
                    b.Navigation("Match");

                    b.Navigation("SeriesSurface");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.Team", b =>
                {
                    b.Navigation("AffiliationPoints");

                    b.Navigation("MatchParticipant");

                    b.Navigation("MatchTeam");

                    b.Navigation("ParticipantTeam");

                    b.Navigation("Series");

                    b.Navigation("SeriesTeam");
                });

            modelBuilder.Entity("Gordon360.Models.Gordon360.TeamStatus", b =>
                {
                    b.Navigation("Team");
                });
#pragma warning restore 612, 618
        }
    }
}
