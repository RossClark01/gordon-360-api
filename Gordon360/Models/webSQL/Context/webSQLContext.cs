// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Gordon360.Models.webSQL.Models;

namespace Gordon360.Models.webSQL.Context
{
    public partial class webSQLContext : DbContext
    {
        public webSQLContext()
        {
        }

        public webSQLContext(DbContextOptions<webSQLContext> options)
            : base(options)
        {
        }

        public virtual DbSet<GlobalSetting> GlobalSettings { get; set; }
        public virtual DbSet<Mailstop> Mailstops { get; set; }
        public virtual DbSet<Photo> Photos { get; set; }
        public virtual DbSet<account> accounts { get; set; }
        public virtual DbSet<account_profile> account_profiles { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Photo>(entity =>
            {
                entity.Property(e => e.ID).HasComment("Unique sequntial ID");

                entity.Property(e => e.Accountid).HasComment("From account table");
            });

            modelBuilder.Entity<account>(entity =>
            {
                entity.HasKey(e => e.account_id)
                    .HasName("PK_account_1");

                entity.HasIndex(e => e.AD_Username, "IX_account")
                    .HasFillFactor(90);

                entity.HasIndex(e => e.AD_Username, "IX_account_ad_username")
                    .HasFillFactor(90);

                entity.HasIndex(e => e.account_id, "PK_account")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => e.AD_Username, "ix_AD_Username_Includes")
                    .HasFillFactor(100);

                entity.HasIndex(e => e.AD_Username, "ix_AD_Username_Includes2")
                    .HasFillFactor(100);

                entity.Property(e => e.AD_Username).HasComment("Active Directory Username");
            });

            modelBuilder.Entity<account_profile>(entity =>
            {
                entity.Property(e => e.account_id).ValueGeneratedNever();
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}